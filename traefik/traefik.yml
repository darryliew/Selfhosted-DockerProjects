global:
  checkNewVersion: true
  sendAnonymousUsage: true

entryPoints:
  # Not used in apps, but redirect everything from HTTP to HTTPS
  http:
    address: :80
    http:
      middlewares:
        - securityHeaders@file   # applying custom security headers on all endpoints
        - my-plugin-log4shell@file   # applying log4j JNDI attacks plugin on all endpoints
      redirections:
        entryPoint:
          to: https
          scheme: https

  # HTTPS endpoint, with domain wildcard
  https:
    address: :443
    http:
      tls:
        # Generate a wildcard domain certificate
        certResolver: letsencrypt
        domains:
          - main: nightowls.pro   # change to your domain
            sans:
              - '*.nightowls.pro' # change to your domain
      middlewares:
        - securityHeaders@file   # applying custom security headers on all endpoints
        - my-plugin-log4shell@file   # applying log4j JNDI attacks plugin on all endpoints
        - crowdsec-bouncer@file   # applying crowdsec bouncers through all endpoints going through traefik

providers:
  providersThrottleDuration: 2s

  # docker provider for connecting all apps that are inside your docker network
  docker:
    watch: true
    network: proxy   # change to your docker network name
    # Default host rule to containername.domain.example
    defaultRule: "Host(`{{ index .Labels \"com.docker.compose.service\"}}.nightowls.pro`)" # replace with your domain
    endpoint: "tcp://socket-proxy:2375"
    swarmModeRefreshSeconds: 15s
    exposedByDefault: false

  # include dynamic traefik file rules that will be run in the directory; don't need to restart service for file edits
  file:
    filename: /etc/traefik/fileConfig.yml
    watch: true

# Using LetsEncrypt to generate ssl certs
certificatesResolvers:
  letsencrypt:
    acme:
      email: dee.nightowls@gmail.com
      storage: /etc/traefik/acme.json
      #caServer: https://acme-staging-v02.api.letsencrypt.org/directory   # staging server, comment this out to use prod
      dnsChallenge:
        provider: porkbun
        # Used to make sure the dns challenge is propagated to the rights dns servers
        resolvers:
          - "1.1.1.1:53"
          - "8.8.8.8:53"
        delayBeforeCheck: 10

# Enabling traefik dashboard UI
api:
  dashboard: true

# log level INFO|DEBUG|ERROR
log:
  level: INFO
  filePath: "/var/log/crowdsec/traefik.log"
  bufferingSize: 50

# giving access to crowdsec to analyze traefik logs
accessLog:
  filePath: "/var/log/crowdsec/accesstraefik.log"
  bufferingSize: 50

# installed plugins provided by traefik
experimental:
  plugins:
    plugin-log4shell:
      moduleName: "github.com/traefik/plugin-log4shell"
      version: "v0.1.2"
